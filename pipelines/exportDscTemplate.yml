parameters:
  - name: buildEnvironments
    type: object
    default: {}
  - name: poolName
    type: string

stages:
  - ${{ each buildEnvironment in parameters.buildEnvironments }}:
      - stage: Export${{ buildEnvironment.Name }}
        displayName: Export of environment ${{ buildEnvironment.Name }}
        pool:
          name: ${{ parameters.poolName }}
          demands:
            - buildEnvironment -equals ${{ buildEnvironment.Name }}
        dependsOn: []

        jobs:
          - job: Export${{ buildEnvironment.Name }}
            displayName: Export of environment ${{ buildEnvironment.Name }}

            steps:
              - task: PowerShell@2
                name: displayEnvVariables
                displayName: Display Environment Variables
                inputs:
                  targetType: inline
                  pwsh: true
                  script: |
                    dir -Path env: | Format-Table -Property Name, Value -AutoSize | Out-String | Write-Host

              - task: PowerShell@2
                name: CleanModuleFolder
                displayName: "Clean Program Files Modules"
                inputs:
                  pwsh: true
                  filePath: ./build.ps1
                  arguments: -UseModuleFast -ResolveDependency -Tasks CleanModuleFolder

              - task: PowerShell@2
                name: ExportTenantConfig
                displayName: Export Tenant Configuration
                inputs:
                  pwsh: false
                  filePath: ./build.ps1
                  arguments: -UseModuleFast -ResolveDependency -Tasks export
                continueOnError: true

              - task: PowerShell@2
                name: ConvertTenantConfig
                displayName: Convert Exported Tenant Configuration
                inputs:
                  pwsh: true
                  filePath: ./build.ps1
                  arguments: -UseModuleFast -Tasks exportConvert
                continueOnError: true

              - task: PublishPipelineArtifact@1
                displayName: Publish Exported Data
                inputs:
                  targetPath: "$(buildFolderName)/Export"
                  artifact: TenantConfig-$(BuildEnvironment)
                  publishLocation: pipeline
                  parallel: true
